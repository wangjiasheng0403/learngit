<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zznode.dao.TbUsersScoreMapper">
    <resultMap id="BaseResultMap" type="org.zznode.entity.TbUsersScore">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="userID" jdbcType="BIGINT" property="userid"/>
        <result column="userName" jdbcType="VARCHAR" property="username"/>
        <result column="timeQuantum" jdbcType="VARCHAR" property="timequantum"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
        <result column="paryid" jdbcType="BIGINT" property="paryid"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, userID, userName, timeQuantum, score, paryid, createTime
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_users_score
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from tb_users_score
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insertOne" keyColumn="id" keyProperty="id" parameterType="org.zznode.entity.TbUsersScore"
            useGeneratedKeys="true">
        insert into tb_users_score (userID, userName, timeQuantum,
                                    score, paryid, createTime, id)
        values (#{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{timequantum,jdbcType=VARCHAR},
                #{score,jdbcType=INTEGER}, #{paryid,jdbcType=BIGINT}, #{createtime,jdbcType=TIMESTAMP},
                #{id,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.zznode.entity.TbUsersScore"
            useGeneratedKeys="true">
        insert into tb_users_score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userID,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="timequantum != null">
                timeQuantum,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="paryid != null">
                paryid,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="id != null">
                id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="timequantum != null">
                #{timequantum,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
            <if test="paryid != null">
                #{paryid,jdbcType=BIGINT},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.zznode.entity.TbUsersScore">
        update tb_users_score
        <set>
            <if test="userid != null">
                userID = #{userid,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                userName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="timequantum != null">
                timeQuantum = #{timequantum,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=INTEGER},
            </if>
            <if test="paryid != null">
                paryid = #{paryid,jdbcType=BIGINT},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.zznode.entity.TbUsersScore">
        update tb_users_score
        set userID      = #{userid,jdbcType=BIGINT},
            userName    = #{username,jdbcType=VARCHAR},
            timeQuantum = #{timequantum,jdbcType=VARCHAR},
            score       = #{score,jdbcType=INTEGER},
            paryid      = #{paryid,jdbcType=BIGINT},
            createTime  = #{createtime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getTbUsersScoreMaps" resultType="java.util.Map">
        select tb_users_score.paryid
        ,tb_users_score.timeQuantum
        ,tb_pary.partName
        ,userCount.count
        ,sum(tb_users_score.score) as totalScore
        ,FORMAT(sum(tb_users_score.score) / userCount.count ,2) as ageScore
        from tb_users_score,
        tb_pary,
        (
        select count(tb_users.userID) as count ,tb_users.paryID from tb_users group by tb_users.paryID
        ) as userCount
        where tb_users_score.paryid = tb_pary.partID
        and userCount.paryID = tb_users_score.paryid
        <if test="condition.timeQuantum != null and condition.timeQuantum != ''">
            and tb_users_score.timeQuantum = '${condition.timeQuantum}'
        </if>
        <if test="condition.partName != null and condition.partName != ''">
            and tb_pary.partName like '%${condition.partName}%'
        </if>
        group by tb_users_score.timeQuantum, tb_pary.partID
        order by ageScore desc
    </select>
</mapper>
